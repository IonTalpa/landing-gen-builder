// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Project {
  id         String   @id @default(cuid())
  name       String
  slug       String   @unique
  sector     String?
  locale     String   @default("tr")
  // Json -> String (text)
  styleTags  String   @default("[]") @db.Text
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  brand        Brand?
  assets       Assets?
  content      Content?
  layout       Layout?
  generated    Generated[]
  exports      Export[]
  chatMessages ChatMessage[]

  @@map("projects")
}

model Brand {
  id           String  @id @default(cuid())
  projectId    String  @unique
  primary      String?
  secondary    String?
  // Json -> String (text)
  palette      String  @default("[]")  @db.Text
  headingFont  String  @default("{}")  @db.Text
  bodyFont     String  @default("{}")  @db.Text
  logoPath     String?

  project      Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("brands")
}

model Assets {
  id           String   @id @default(cuid())
  projectId    String   @unique
  heroPath     String?
  // Json -> String (text)
  galleryPaths String   @default("[]") @db.Text

  project      Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("assets")
}

model Content {
  id        String @id @default(cuid())
  projectId String @unique
  headline  String?
  // Json -> String (text)
  benefits  String  @default("[]")  @db.Text
  cta       String?
  // Json -> String (text)
  contact   String  @default("{}")  @db.Text

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("contents")
}

model Layout {
  id        String @id @default(cuid())
  projectId String @unique
  // Json -> String (text)
  sections  String @default("[]") @db.Text

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("layouts")
}

model Generated {
  id            String   @id @default(cuid())
  projectId     String
  // Json -> String (text)
  themeJson     String   @default("{}") @db.Text
  // Json -> String (text)
  patterns      String   @default("[]") @db.Text
  templateFront String   @default("")
  // Json -> String (text)
  meta          String   @default("{}") @db.Text
  createdAt     DateTime @default(now())

  project       Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("generated")
}

model Export {
  id        String   @id @default(cuid())
  projectId String
  // enum -> String
  kind      String   @default("WP_THEME")
  zipPath   String
  sizeKB    Int
  checksum  String
  createdAt DateTime @default(now())

  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("exports")
}

model ChatMessage {
  id        String   @id @default(cuid())
  projectId String?
  // enum -> String
  role      String
  content   String
  createdAt DateTime  @default(now())

  project   Project?  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("chat_messages")
}

// enum'lar SQLite connector tarafından desteklenmediği için kaldırıldı:
// enum ExportKind { WP_THEME }
// enum MessageRole { USER, ASSISTANT, TOOL }
